{"version":3,"sources":["components/Home.js","context/auth.js","components/MyPopup.js","components/graphql.js","components/LikeButton.js","components/DeleteButton.js","components/PostCard.js","firebase.js","FormItems/AlertDialog.js","components/PostForm.js","components/Recipe.js","FormItems/Button.js","components/Login.js","components/Signup.js","components/AuthRoute.js","FormItems/youtubeEmbed.js","components/SinglePost.js","components/App.js","index.js"],"names":["Home","className","initialState","user","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","AuthContext","createContext","login","userData","logout","authReducer","state","action","type","payload","AuthProvider","props","useReducer","dispatch","Provider","value","console","log","setItem","token","MyPopup","content","children","Popup","inverted","trigger","FETCH_POSTS_QUERY","gql","LIKE_POST_MUTATION","LikeButton","post","id","likeCount","likes","useState","liked","setLiked","useEffect","find","like","username","useMutation","refetchQueries","query","likePost","likeButton","Icon","name","color","to","Button","as","labelPosition","onClick","variables","postId","DELETE_POST_MUTATION","DELETE_COMMENT_MUTATION","DeleteButton","commentId","callback","confirmOpen","setConfirmOpen","mutation","update","proxy","data","readQuery","getPosts","filter","p","writeQuery","deletePostOrMutation","style","margin","cursor","Confirm","open","onCancel","onConfirm","PostCard","title","catagory","image","createdAt","commentCount","useContext","Card","Content","padding","Link","src","width","alt","minHeight","Description","align","marginTop","Meta","textAlign","moment","fromNow","extra","float","storage","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Transition","React","forwardRef","ref","Slide","direction","AlertDialog","errMsg","setErrorMsg","Dialog","TransitionComponent","keepMounted","onClose","msg","aria-labelledby","aria-describedby","DialogTitle","variant","ExclamationCircleOutlined","DialogContent","DialogContentText","DialogActions","useStyles","makeStyles","theme","root","spacing","CREATE_POST_MUTATION","PostForm","setToggle","classes","file","setFile","url","setURL","youtube","setEmbedId","values","setValues","catagories","setcatagories","Option","Select","createPost","onChange","event","target","borderRadius","border","boxShadow","noValidate","autoComplete","span","e","defaultValue","TextField","label","TextareaAutosize","rowsMax","height","fontSize","document","getElementById","click","UploadOutlined","marginLeft","files","hidden","placeholder","InputProps","startAdornment","InputAdornment","position","put","on","error","child","getDownloadURL","then","CheckOutlined","CloseOutlined","flexGrow","background","borderRight","paper","palette","text","secondary","Recipe","toggle","sel_category","setSelCategory","search_str","setSearchString","useQuery","category","loading","refetch","window","screen","availHeight","orientation","FilterOutlined","SearchOutlined","PlusOutlined","LoadingOutlined","Grid","container","map","item","xs","sm","lg","marginBottom","Buttons","Login","password","val","setval","errors","setErrors","context","_","onError","err","graphQLErrors","extensions","exception","loginUser","ChangeHandler","suffix","UserOutlined","Password","iconRender","visible","EyeTwoTone","EyeInvisibleOutlined","message","showIcon","closable","general","register","Signup","confirmPassword","email","setdata","AuthRoute","Component","component","rest","render","YoutubeEmbed","embedId","frameBorder","allow","allowFullScreen","SUBMIT_COMMENT_MUTATION","FETCH_POST_QUERY","SinglePost","match","params","postMarkup","commentInputRef","useRef","comment","setComment","current","blur","body","submitComment","undefined","getPost","comments","Row","Column","fluid","split","one","index","PlusCircleTwoTone","marginRight","basic","pointing","history","push","Header","MessageOutlined","clear","Image","Form","disabled","trim","Error404","Alert","severity","App","href","exact","path","httpLink","createHttpLink","uri","authLink","setContext","headers","Authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM"],"mappings":"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","file":"static/js/main.e40941ea.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"home-background-container\">\r\n            <div className=\"home-background\"></div>\r\n            {/* <img src=\"https://images.pexels.com/photos/461428/pexels-photo-461428.jpeg?cs=srgb&dl=pexels-pixabay-461428.jpg&fm=jpg\" alt=\"food background image\" /> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, { useReducer, createContext } from 'react';\nimport jwtDecode from 'jwt-decode';\n\nconst initialState = {\n  user: null\n};\n\nif (localStorage.getItem('jwtToken')) {\n  const decodedToken = jwtDecode(localStorage.getItem('jwtToken'));\n\n  if (decodedToken.exp * 1000 < Date.now()) {\n    localStorage.removeItem('jwtToken');\n  } else {\n    initialState.user = decodedToken;\n  }\n}\n\nconst AuthContext = createContext({\n  user: null,\n  login: (userData) => {},\n  logout: () => {}\n});\n\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case 'LOGIN':\n      return {\n        ...state,\n        user: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null\n      };\n    default:\n      return state;\n  }\n}\n\nfunction AuthProvider(props) {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  function login(userData) {\n    console.log(userData)\n    localStorage.setItem('jwtToken', userData.token);\n    dispatch({\n      type: 'LOGIN',\n      payload: userData\n    });\n  }\n\n  function logout() {\n    localStorage.removeItem('jwtToken');\n    dispatch({ type: 'LOGOUT' });\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{ user: state.user, login, logout }}\n      {...props}\n    />\n  );\n}\n\nexport { AuthContext, AuthProvider };\n","import { Popup } from 'semantic-ui-react';\nimport React from 'react';\n\nfunction MyPopup({ content, children }) {\n  return <Popup inverted content={content} trigger={children} />;\n}\n\nexport default MyPopup;","import gql from 'graphql-tag';\n\nexport const FETCH_POSTS_QUERY = gql`\n query GetPosts($category : String, $search_str : String) {\n    getPosts(category : $category, search_str : $search_str){\n        id\n        title\n        content\n        image\n        youtube\n        createdAt\n        createdAt\n        catagory\n        username\n        commentCount\n        comments{\n          id\n          createdAt\n          username\n          body\n        }\n        likes{\n          id\n           createdAt\n          username\n        }\n        likeCount\n      }\n  }\n`;","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Button, Label, Icon } from 'semantic-ui-react';\nimport MyPopup from './MyPopup';\n\nimport { FETCH_POSTS_QUERY } from './graphql';\n\nfunction LikeButton({ user, post: { id, likeCount, likes } }) {\n  const [liked, setLiked] = useState(false);\n\n  useEffect(() => {\n    if (user && likes.find((like) => like.username === user.username)) {\n      setLiked(true);\n    } else setLiked(false);\n  }, [user, likes]);\n\n  const [likePost] = useMutation(LIKE_POST_MUTATION, {\n    refetchQueries:[{query:FETCH_POSTS_QUERY}]\n  });\n\n  const likeButton = user ? (\n    liked ? (\n      <Icon name=\"heart\" color=\"red\"/>\n    ) : (\n      <Icon name=\"heart\" color=\"green\"/>\n    )\n  ) : (\n      <Link  to=\"/login\"><Icon name=\"heart\" color=\"green\"/></Link>\n  );\n\n  return (\n    <Button as=\"div\" labelPosition=\"right\" onClick={() => {\n        likePost({\n            variables:{\n                postId: id\n            }\n        })\n    }}>\n      <MyPopup content={liked ? 'Unlike' : 'Like'}>{likeButton}</MyPopup>\n      <span>\n        {likeCount}\n      </span>\n    </Button>\n  );\n}\n\nconst LIKE_POST_MUTATION = gql`\n  mutation likePost($postId: ID!) {\n    likePost(postId: $postId) {\n      id\n      likes {\n        id\n        username\n      }\n      likeCount\n    }\n  }\n`;\n\nexport default LikeButton;","import React, { useState } from 'react';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Button, Confirm, Icon } from 'semantic-ui-react';\n\nimport { FETCH_POSTS_QUERY } from './graphql';\nimport MyPopup from './MyPopup';\n\nfunction DeleteButton({ postId, commentId, callback }) {\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const mutation = commentId ? DELETE_COMMENT_MUTATION : DELETE_POST_MUTATION;\n  const [deletePostOrMutation] = useMutation(mutation, {\n    update(proxy) {\n      setConfirmOpen(false);\n      if (!commentId) {\n        const data = proxy.readQuery({\n          query: FETCH_POSTS_QUERY\n        });\n        data.getPosts = data.getPosts.filter((p) => p.id !== postId);\n        proxy.writeQuery({ query: FETCH_POSTS_QUERY, data });\n      }\n      if (callback) callback();\n    },\n    variables: {\n      postId,\n      commentId\n    }\n  });\n  return (\n    <>\n      <MyPopup content={commentId ? 'Delete comment' : 'Delete post'}>\n          <Icon\n            color=\"red\"\n            onClick={() => setConfirmOpen(true)}\n            name=\"trash\" style={{ margin: 0, cursor : 'pointer' }} />\n      </MyPopup>\n      <Confirm\n        open={confirmOpen}\n        onCancel={() => setConfirmOpen(false)}\n        onConfirm={deletePostOrMutation}\n      />\n    </>\n  );\n}\n\nconst DELETE_POST_MUTATION = gql`\n  mutation deletePost($postId: ID!) {\n    deletePost(postId: $postId)\n  }\n`;\n\nconst DELETE_COMMENT_MUTATION = gql`\n  mutation deleteComment($postId: ID!, $commentId: ID!) {\n    deleteComment(postId: $postId, commentId: $commentId) {\n      id\n      comments {\n        id\n        username\n        createdAt\n        body\n      }\n      commentCount\n    }\n  }\n`;\n\nexport default DeleteButton;","import React, { useContext } from 'react';\nimport { Button, Card, Icon, Label, Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\n\nimport { AuthContext } from '../context/auth';\nimport LikeButton from './LikeButton';\nimport DeleteButton from './DeleteButton';\nimport MyPopup from './MyPopup';\n\nfunction PostCard({\n  post: { title,content,catagory, image, createdAt, id, username, likeCount, commentCount, likes }\n}) {\n  const { user } = useContext(AuthContext);\n\n  return (\n    <div className=\"postcard-container\">\n      <Card.Content style={{padding : '0px'}} as={Link} to={`/recipes/${id}`} >\n        <img src={image} width=\"100%\" alt=\"no image\" style={{margin:'0', minHeight:'200px'}}/>\n        {/* <Card.Header style={{textAlign:'left'}}>@{username}</Card.Header> */}\n        <Card.Description align=\"left\" style={{marginTop:'5px'}}><h4>{title}</h4></Card.Description>\n        <Card.Meta style={{textAlign:'left'}}>\n          <p>{moment(createdAt).fromNow(true)} ago by @{username}</p>\n        </Card.Meta>\n      </Card.Content>\n      <Card.Content extra>\n        <span style={{float:'left'}}>{catagory}</span>\n        <div style={{float : 'right'}}>\n          <LikeButton user={user} post={{ id, likes, likeCount }} />\n          <Button as=\"div\"  labelPosition=\"right\">\n            <MyPopup content=\"Comment on post\">\n                <span>\n                  <Icon name=\"comments\" color=\"blue\"/>\n                  <span>\n                    {commentCount}\n                  </span>\n                </span>\n            </MyPopup>\n          </Button>\n          {user && user.username === username && <DeleteButton postId={id} />}\n        </div>\n      </Card.Content>\n    </div>\n  );\n}\n\nexport default PostCard;\n\n{/* <Card fluid>\n      <Card.Content>\n        <Image\n          floated=\"right\"\n          size=\"mini\"\n          src=\"https://react.semantic-ui.com/images/avatar/large/molly.png\"\n        />\n        <Card.Header>{username}</Card.Header>\n        <Card.Meta as={Link} to={`/posts/${id}`}>\n          {moment(createdAt).fromNow(true)}\n        </Card.Meta>\n        <Card.Description>{title}</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <LikeButton user={user} post={{ id, likes, likeCount }} />\n        <MyPopup content=\"Comment on post\">\n          <Button labelPosition=\"right\" as={Link} to={`/posts/${id}`}>\n            <Button color=\"blue\" basic>\n              <Icon name=\"comments\" />\n            </Button>\n            <Label basic color=\"blue\" pointing=\"left\">\n              {commentCount}\n            </Label>\n          </Button>\n        </MyPopup>\n        {user && user.username === username && <DeleteButton postId={id} />}\n      </Card.Content>\n    </Card> */}","import firebase from \"firebase\"\nimport \"firebase/storage\";\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCAfy_6tVkGat9sBRKMLBgOqyP5rIFZVpU\",\n    authDomain: \"niii-fba77.firebaseapp.com\",\n    projectId: \"niii-fba77\",\n    storageBucket: \"niii-fba77.appspot.com\",\n    messagingSenderId: \"143969709978\",\n    appId: \"1:143969709978:web:57ae8d66bbe389dfe59423\",\n    measurementId: \"G-XC2WEP2ELW\"\n};\n// Initialize Firebase\n\nexport default firebase.initializeApp(firebaseConfig);\nexport const storage = firebase.storage();\n","import React from \"react\";\r\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Slide } from \"@material-ui/core\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport const AlertDialog = ({errMsg, setErrorMsg}) => {\r\n    return (\r\n        <Dialog\r\n          open={errMsg.open}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={() => setErrorMsg({msg:\"\", open :false})}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        //   fullWidth={true}\r\n        //   maxWidth={'sm'}\r\n        > \r\n          <DialogTitle id=\"alert-dialog-slide-title\" variant=\"contained\" color=\"primary\"><ExclamationCircleOutlined />{\" Warning\"}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-slide-description\" style={{color : 'red'}}>\r\n              {errMsg.msg}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setErrorMsg({msg:\"\", open :false})} variant=\"contained\" color=\"secondary\">\r\n              OK\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n    );\r\n  }","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { storage } from \"../firebase\"\nimport { FETCH_POSTS_QUERY } from './graphql';\nimport {Col, Row, Select} from 'antd'\nimport { AlertDialog } from '../FormItems/AlertDialog';\nimport { InputAdornment, TextareaAutosize } from '@material-ui/core';\nimport { CheckOutlined, CloseOutlined, UploadOutlined } from \"@ant-design/icons\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nfunction PostForm({setToggle}) {\n  const classes = useStyles();\n  \n  const [errMsg, setErrorMsg] = useState({msg : \"\", open : false});\n  \n  const [file, setFile] = useState(null);\n  const [url, setURL] = useState(\"\");\n  const [youtube, setEmbedId] = useState(\"\");\n  const [values, setValues] = useState({\n    title: '',\n    content: '',\n  });\n  const [catagories,setcatagories] = useState('')\n  const Option = Select.Option\n\n  const [createPost, { data }] = useMutation(CREATE_POST_MUTATION, {\n    refetchQueries: [{ query: FETCH_POSTS_QUERY }]\n  })\n  const onChange = (event) => {\n    setValues({ ...values, [event.target.name]: event.target.value });\n  };\n\n  function handleChange(e) {\n    setFile(e.target.files[0]);\n  }\n  function handleUpload() {\n\n    // validation\n    if(!catagories){\n      setErrorMsg({msg : \"Select a category..\", open : true});\n      return;\n    }\n    if(!values.title){\n      setErrorMsg({msg : \"Input a title..\", open : true});\n      return;\n    }\n    if(!values.content){\n      setErrorMsg({msg : \"Input the content..\", open : true});\n      return;\n    }\n    if(!file){\n      setErrorMsg({msg : \"Select the image..\", open : true});\n      return;\n    }\n\n    const uploadTask = storage.ref(`/images/${file.name}`).put(file);\n    uploadTask.on(\"state_changed\", console.log, console.error, () => {\n      storage\n        .ref(\"images\")\n        .child(file.name)\n        .getDownloadURL()\n        .then((url) => {\n          setFile(null);\n          setURL(url);\n        });\n    });\n  }\n  const pushdata = () => {\n    createPost({\n      variables: {\n        title: values.title,\n        content: values.content,\n        image: url,\n        youtube : youtube,\n        catagory: catagories\n      }\n    })\n    setURL(\"\")\n    setEmbedId(\"\")\n    values.title = \"\"\n    values.content = \"\"\n    setToggle(false)\n  }\n  if(url !== \"\"){\n    pushdata()\n  }\n  return (\n    <div style={{borderRadius:'15px',width:\"60%\",margin: 'auto', marginTop : '80px',border:\"1px solid gray\",boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px'}}>\n      <h1>New Recipe</h1>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <Row style={{width : '100%'}}>\n          <Col span={12}>\n            <Select onChange={(e)=> setcatagories(e)} defaultValue=\"Select Catagory\" style={{width:'70%', marginTop : '18px'}}>\n              <Option value=\"Spicy\">Spicy</Option>\n              <Option value=\"Desert\">Desert</Option>\n              <Option value=\"Chinese\">Chinese</Option>\n              <Option value=\"Italian\">Italian</Option>\n            </Select>\n          </Col>\n          <Col span={12}>\n            <TextField style={{width:'70%'}} onChange={onChange} value={values.title} name=\"title\" id=\"standard-basic\" label=\"Title\" />\n          </Col>\n        </Row>\n        <TextareaAutosize\n              rowsMax={200}\n              style={{width:'80%', marginTop : '30px', height :'180px', fontSize:'17px'}}\n              onChange={onChange}\n              value={values.content}\n              name=\"content\"\n              id=\"standard-basic\"\n              label=\"Content\"\n          />\n        <Row style={{marginTop : '30px'}}>\n          <Col span={2}>\n          </Col>\n          <Col span={10} align=\"left\">\n            <div onClick={()=>document.getElementById(\"selFile\").click()} style={{cursor:'pointer'}}>\n              <UploadOutlined \n                style={{fontSize : '28px', marginLeft:'-10px'}}\n              />\n              <span style={{marginLeft:'4px'}}>Upload  <i style={{color:'#44f'}}>{(file?file.name:\"\")}</i></span>\n            </div>\n            <input id=\"selFile\" type=\"file\" onChange={handleChange} hidden/>\n          </Col>\n          <Col span={11}>\n            <TextField \n                onChange={(e)=>{setEmbedId(e.target.value)}}\n                placeholder=\"rokGy0huYEA\" \n                style={{width : '100%'}}\n                InputProps={{\n                    startAdornment: (\n                    <InputAdornment position=\"start\">\n                        <span>https://www.youtube.com/embed/</span>\n                    </InputAdornment>\n                    )\n                }}\n            />\n          </Col>\n          <Col span={1}>\n          </Col>\n        </Row>\n        <Row style={{width:'100%', marginTop : '30px'}}>\n          <Col span={12}>\n            <Button style={{width:'60%'}} onClick={() => {\n                handleUpload()\n              }} variant=\"contained\" color=\"primary\"\n            >\n              <CheckOutlined style={{fontSize : '16px'}}/>\n              <span style={{marginLeft:'4px'}}>Submit</span>\n            </Button>\n          </Col>\n          <Col span={12}>\n            <Button style={{width:'60%'}} onClick={() => {\n                setToggle(false)\n              }} variant=\"contained\" color=\"secondary\"\n            >\n              <CloseOutlined style={{fontSize : '16px'}}/>\n              <span style={{marginLeft:'4px'}}>\n              Cancel\n              </span>\n            </Button>\n          </Col>\n        </Row>\n      </form>\n      {errMsg.open && <AlertDialog {...{errMsg, setErrorMsg}}/>}\n    </div>\n  );\n}\nconst CREATE_POST_MUTATION = gql`\n  mutation createPost($title: String!,$content: String!, $image: String!,$youtube : String!, $catagory: String!) {\n    createPost(title: $title,content: $content, image: $image, youtube : $youtube, catagory: $catagory) {\n      id\n      title\n      content\n      image\n      youtube\n      createdAt\n      username\n      likes {\n        id\n        username\n        createdAt\n      }\n      likeCount\n      comments {\n        id\n        body\n        username\n        createdAt\n      }\n      commentCount\n    }\n  }\n`;\n\nexport default PostForm;\n","import React, { useState, useEffect } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { AuthContext } from '../context/auth';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PostCard from './PostCard';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PostForm from './PostForm';\r\nimport { FETCH_POSTS_QUERY } from './graphql'\r\nimport Button from '@material-ui/core/Button';\r\nimport { Col, Divider, Row, Select } from 'antd'\r\nimport { LoadingOutlined, SearchOutlined, FilterOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { InputAdornment } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 2,\r\n        background : '#fff',\r\n        borderRight : '3px solid green'\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\nfunction Recipe() {\r\n    const classes = useStyles();\r\n    const Option = Select.Option\r\n\r\n    const [toggle, setToggle] = useState(false)\r\n    const [sel_category, setSelCategory] = useState('');\r\n    const [search_str, setSearchString] = useState('');\r\n\r\n    //   const { user } = useContext(AuthContext);\r\n    const { loading, data , refetch} = useQuery(FETCH_POSTS_QUERY, {\r\n        variables : {category : sel_category, search_str : search_str}\r\n    });\r\n    useEffect(()=>{\r\n        refetch();\r\n    })\r\n    return (\r\n        <div  style={{minHeight: (window.screen.availHeight-150)+'px'}}>\r\n            {toggle && (\r\n                <PostForm setToggle={setToggle} />\r\n            )}\r\n            {toggle === false && (\r\n                <Row>\r\n                    <Col span={6} className=\"controlDiv\" style={{minHeight: (window.screen.availHeight-150)+'px'}} align=\"center\">\r\n                        <Divider orientation=\"center\"><i><FilterOutlined /> filters</i></Divider>\r\n                        <div className=\"filter-container\">\r\n                            <TextField \r\n                                onChange={(e)=>{setSearchString(e.target.value)}}\r\n                                placeholder=\"Advanced Search\" \r\n                                style={{width : '80%'}}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <SearchOutlined/>\r\n                                    </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n                            <div style={{marginTop : '30px'}}>\r\n                                <Divider orientation=\"left\" style={{margin : '5px'}}>category</Divider>\r\n                                <Select onChange={(e) => setSelCategory(e)} defaultValue=\"Select the Category\" style={{ width: '80%'}}>\r\n                                    <Option value=\"Any\">Any</Option>\r\n                                    <Option value=\"Spicy\">Spicy</Option>\r\n                                    <Option value=\"Desert\">Desert</Option>\r\n                                    <Option value=\"Chinese\">Chinese</Option>\r\n                                    <Option value=\"Italian\">Italian</Option>\r\n                                </Select>\r\n                            </div>\r\n                        </div>\r\n                        <Divider orientation=\"left\" style={{marginTop:'20px'}}/>\r\n                        <Button\r\n                            style={{marginTop : '30px'}}\r\n                            onClick={() => {\r\n                                setToggle(true)\r\n                            }} variant=\"contained\" color=\"primary\">\r\n                                <PlusOutlined /><span style={{marginLeft:'4px'}}>Create Post</span>\r\n                        </Button>\r\n                    </Col>\r\n                    {loading ? (\r\n                        <h1> <LoadingOutlined /></h1>\r\n                    ) : (\r\n                            <Col span={18} className={classes.root}>\r\n                                <Grid container spacing={3} style={{ width: \"100%\", margin: 'auto' }}>\r\n                                    {data &&\r\n                                        data?.getPosts?.map((post) => {\r\n                                                return (\r\n                                                    <Grid item xs={12} sm={6} lg={3}>\r\n                                                        <div key={post.id} style={{ marginBottom: 20}}>\r\n                                                            <PostCard post={post} />\r\n                                                        </div>\r\n                                                    </Grid>\r\n                                                )\r\n                                            }\r\n\r\n                                        )\r\n                                    }\r\n                                </Grid>\r\n                            </Col>\r\n                        )}\r\n                </Row>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Recipe;","import React from 'react'\nimport { Button } from 'antd';\n// import './Assets/css/button.css'\nimport '../Assets/css/button.css'\nconst Buttons = (props) => {\n    return (\n        <Button type=\"button\" className=\"Submit-btn btn-text\" onClick={props.onClick}>{props.name}</Button>\n    )\n}\n\nexport default Buttons\n","import React, { useState, useContext } from 'react';\nimport { Input, Space, Button, Alert } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\nimport Buttons from '../FormItems/Button';\nimport { Link } from 'react-router-dom'\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { AuthContext } from '../context/auth';\n// import Navigation from '../components/navigation'\nconst login = gql`\nmutation(\n    $username: String!\n    $password: String!\n){\n    login(\n        username:$username\n        password:$password\n        ){\n      id\n      email\n      token\n      username\n      createdAt\n    }\n  }\n`\n\n\nconst Login = () => {\n    const [val, setval] = useState({\n        username: \"\",\n        password: \"\"\n    })\n    const [errors, setErrors] = useState({});\n    const context = useContext(AuthContext);\n    const [loginUser, { loading }] = useMutation(login, {\n        update(\n            _,\n            {\n                data: { login: userData }\n            }\n        ) {\n            context.login(userData);\n            //   props.history.push('/drag');\n        },\n        onError(err) {\n            console.log('here', err)\n            setErrors(err.graphQLErrors[0].extensions.exception.errors);\n            \n        },\n        variables: val\n    })\n    function loginUserCallback() {\n        loginUser();\n    }\n\n    const ChangeHandler = (e) => {\n        setval({ ...val, [e.target.name]: e.target.value })\n    }\n    console.log(loading)\n\n    return (\n        <>\n        {/* <Navigation /> */}\n        <div className=\"singin-main-container\" style={{marginTop:'0px'}}>\n            <div className=\"signin-left-container\">\n                <div className=\"logo-conatainer\">\n                    <h1 className=\"left-logo\">App</h1>\n                </div>\n                <div className=\"signin-input\">\n                    <h3 style={{textAlign:'left'}} className=\"sigin-name\">Login</h3>\n                    <Input className=\"input\" name=\"username\" onChange={(e) => ChangeHandler(e)} suffix={<UserOutlined style={{ color: 'light-gray !important' }} />} placeholder=\"Username\" />\n                    <Space direction=\"vertical\">\n                        <Input.Password\n                            className=\"input\"\n                            name=\"password\"\n                            onChange={(e) => ChangeHandler(e)}\n                            placeholder=\"Password\"\n                            iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n                        />\n                    </Space>\n                    <div className=\"checkbox-align\">\n                        {/* <div>\n                            <Checkbox className=\"SignIn-Checkbox\"><span >Remember me</span></Checkbox>\n                        </div> */}\n                        {/* <div>\n                            <Link to=\"/forgotPassword\">\n                                <p className=\"singin-forgot-password\">\n                                    Forgot password\n                                </p>\n                            </Link>\n                        </div> */}\n                    </div>\n                    <Buttons onClick={() =>\n                        loginUserCallback()\n                    } className=\"SignUp-btn\" name=\"Log in\" />\n                    {errors.username && <Alert style={{ marginTop: '10px' }} message={errors.username} type=\"warning\" showIcon closable />}\n                    {errors.password && <Alert style={{ marginTop: '10px' }} message={errors.password} type=\"warning\" showIcon closable />}\n                    {errors.general && <Alert style={{ marginTop: '10px' }} message={errors.general} type=\"warning\" showIcon closable />}\n\n                </div>\n            </div>\n            <div className=\"signin-right-container\">\n                <div className=\"newUser-container\">\n                    <h1>New User?</h1>\n                </div>\n                <p className=\"newUser-para\">Click on get started to create an account with us. It will only take a few minutes</p>\n                <div className=\"btn-container\">\n                    <Button className=\"btn-started\" type=\"button\"><Link to=\"/signup\">Get Started</Link></Button>\n                </div>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default Login\n","import React, { useState, useContext } from 'react'\nimport { Space, Alert, Input, Select } from 'antd';\nimport Buttons from '../FormItems/Button';\nimport { UserOutlined } from '@ant-design/icons';\nimport { EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\n// import Navigation from '../components/navigation'\nimport { AuthContext } from '../context/auth';\nconst register = gql`\nmutation(\n    $username: String!,\n    $password: String!,\n    $confirmPassword: String!,\n    $email:String!,\n){\n    register(registerInput:{\n      username:$username\n      password:$password\n      confirmPassword:$confirmPassword\n      email:$email\n    }){\n      email\n      token\n    }\n  }\n`\nconst Signup = () => {\n  const [data, setdata] = useState({\n    username: '',\n    password: \"\",\n    confirmPassword: \"\",\n    email: \"\",\n\n  })\n\n  const [errors, setErrors] = useState({});\n  const context = useContext(AuthContext);\n  const [loginUser, { loading }] = useMutation(register, {\n    update(\n      _,\n      {\n        data: { register: userData }\n      }\n    ) {\n      context.login(userData);\n    },\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n    variables: data\n  })\n  console.log(loading)\n\n  const ChangeHandler = (e) => {\n    setdata({ ...data, [e.target.name]: e.target.value })\n  }\n  const regiss = () => {\n    loginUser()\n  }\n\n  return (\n    <>\n      {/* <Navigation /> */}\n      <div className=\"singin-main-container\" style={{ marginTop: '0px' }}>\n        <div className=\"signin-left-container\">\n          <div className=\"logo-conatainer\">\n            <h1 className=\"left-logo\">App</h1>\n          </div>\n          <div className=\"signin-input\">\n            <h3 style={{textAlign:'left'}} className=\"sigin-name\">Signup</h3>\n            <Input className=\"input\" name=\"username\" onChange={(e) => ChangeHandler(e)} suffix={<UserOutlined style={{ color: 'light-gray !important' }} />} placeholder=\"Username\" />\n            <Input className=\"input\" placeholder=\"Email Address\" name=\"email\" onChange={(e) => ChangeHandler(e)} />\n            <Space direction=\"vertical\">\n              <Input.Password\n                className=\"input\"\n                name=\"password\" onChange={(e) => ChangeHandler(e)} placeholder=\"Password\"\n                iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n              />\n            </Space>\n            <Space direction=\"vertical\">\n              <Input.Password\n                className=\"input\"\n                name=\"confirmPassword\" onChange={(e) => ChangeHandler(e)} placeholder=\"Confirm Password\"\n                iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n              />\n            </Space>\n            <div className=\"checkbox-align\">\n            </div>\n            <Buttons onClick={() =>\n              regiss()\n            } className=\"SignUp-btn\" name=\"SignUp\" />\n            {errors.username && <Alert style={{ marginTop: '10px' }} message={errors.username} type=\"warning\" showIcon closable />}\n            {errors.password && <Alert style={{ marginTop: '10px' }} message={errors.password} type=\"warning\" showIcon closable />}\n            {errors.general && <Alert style={{ marginTop: '10px' }} message={errors.general} type=\"warning\" showIcon closable />}\n          </div>\n        </div>\n        <div className=\"signin-right-container\">\n          <div className=\"newUser-container\">\n            <h1>SignUp</h1>\n          </div>\n          {/* <p style={{ textAlign: 'center', color: 'white' }}> Please Select Country and Buisness Fields Here.</p> */}\n   \n          {/* <div className=\"btn-container\">\n            <Button className=\"btn-started\" type=\"button\"><Link to=\"/signup\">Get Started</Link></Button>\n          </div> */}\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Signup","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { AuthContext } from '../context/auth';\n\nfunction AuthRoute({ component: Component, ...rest }) {\n  const { user } = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        user ? <Redirect to=\"/\" /> : <Component {...props} />\n      }\n    />\n  );\n}\n\nexport default AuthRoute;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport './youtubeEmbed.css';\r\n\r\nconst YoutubeEmbed = ({ embedId }) => (\r\n  <div className=\"video-responsive\">\r\n    <iframe\r\n      width=\"853\"\r\n      height=\"480\"\r\n      src={`https://www.youtube.com/embed/${embedId}`}\r\n      frameBorder=\"0\"\r\n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n      allowFullScreen\r\n      title=\"Embedded youtube\"\r\n    />\r\n  </div>\r\n);\r\n\r\nYoutubeEmbed.propTypes = {\r\n  embedId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default YoutubeEmbed;","import React, { useContext, useState, useRef } from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport moment from 'moment';\nimport {\n  Button,\n  Card,\n  Form,\n  Grid,\n  Image,\n  Icon,\n  Label\n} from 'semantic-ui-react';\nimport { MessageOutlined, PlusCircleTwoTone } from \"@ant-design/icons\";\nimport { AuthContext } from '../context/auth';\nimport LikeButton from './LikeButton';\nimport DeleteButton from './DeleteButton';\nimport MyPopup from './MyPopup';\nimport YoutubeEmbed from '../FormItems/youtubeEmbed';\n\nfunction SinglePost(props) {\n  const postId = props.match.params.postId;\n  console.log(postId)\n  const { user } = useContext(AuthContext);\n  const commentInputRef = useRef(null);\n\n  const [comment, setComment] = useState('');\n\n  const { data  } = useQuery(FETCH_POST_QUERY, {\n    variables: {\n      postId\n    }\n  });\n\n  const [submitComment] = useMutation(SUBMIT_COMMENT_MUTATION, {\n    update() {\n      setComment('');\n      commentInputRef.current.blur();\n    },\n    variables: {\n      postId,\n      body: comment\n    }\n  });\n\n  function deletePostCallback() {\n    props.history.push('/');\n  }\n\n  let postMarkup;\n  if (data?.getPost === undefined) {\n    postMarkup = <p>Loading post..</p>;\n  } else {\n    const {\n      id,\n      body,\n      createdAt,\n      username,\n      comments,\n      likes,\n      likeCount,\n      commentCount\n    } = data?.getPost;\nconsole.log(data?.getPost)\n    postMarkup = (\n      <Grid  className=\"postcard-container\" style={{width:'90%',margin:'auto'}}>\n        <Grid.Row>\n          <Grid.Column width={9}>\n            <Card fluid>\n              <Card.Content style={{padding:'30px'}}>\n                {/* <Card.Header><p style={{textAlign:'left'}}></p></Card.Header> */}\n                <Card.Description align=\"left\" style={{marginLeft:'10px'}}><h3>{data?.getPost?.title}</h3></Card.Description>\n                <hr/>\n                <Card.Description align=\"left\" style={{margin:'20px 0px 10px 30px'}}>\n                  <div>\n                    {data?.getPost?.content.split('\\n').map((one, index)=>{\n                      if(!one)\n                        return \"\";\n                      return (\n                        <div style={{padding : '5px'}}><PlusCircleTwoTone style={{marginRight:'8px'}}/>{one}</div>\n                      )\n                    })}\n                  </div>\n                </Card.Description>\n                <Card.Meta style={{marginTop:'20px'}} align=\"right\">\n                  <LikeButton user={user} post={{ id, likeCount, likes }} />\n                  <MyPopup content=\"Comment on post\">\n                    <Button\n                      as=\"div\"\n                      labelPosition=\"right\"\n                      onClick={() => console.log('Comment on post')}\n                    >\n                        <Icon name=\"comments\" color=\"blue\"/>\n                      <span basic color=\"blue\" pointing=\"left\">\n                        {commentCount}\n                      </span>\n                    </Button>\n                  </MyPopup>\n                  {user && user.username === username && (\n                    <DeleteButton postId={id} callback={deletePostCallback} />\n                  )}\n                  <span style={{marginLeft:'10px',textAlign:'right'}}>created by @{username} {moment(createdAt).fromNow()}</span>\n                </Card.Meta>\n              <hr />\n            </Card.Content>\n            {comments.map((comment) => (\n              <div fluid key={comment.id} style={{padding:'10px'}}>\n                <Card.Content>\n                  <Card.Header></Card.Header>\n                  <Card.Meta>\n                    <span style={{float:'left', marginLeft:'10px'}}><MessageOutlined style={{fontSize:'17px', color:'#33f'}}/> @{comment.username} {\" \"} {moment(comment.createdAt).fromNow()}</span>\n                    {user && user.username === comment.username && (\n                      <span style={{float:'right',marginRight:'10px'}}><DeleteButton postId={id} commentId={comment.id} /></span>\n                    )}\n                  </Card.Meta>\n                  <p style={{clear:'both'}}>{comment.body}</p>\n                </Card.Content>\n              </div>\n            ))}\n            </Card>\n          </Grid.Column>\n          <Grid.Column width={7}>\n            <Image\n            style={{width:'100%',margin:'auto'}}\n              src={data?.getPost?.image}\n            />\n            {data.getPost.youtube && <div style={{marginTop:'20px'}}>\n              <YoutubeEmbed embedId={data.getPost.youtube}/>\n            </div>}\n            {user && (\n              <Form style={{marginTop : '30px'}}>\n                <p style={{float:'left', marginTop : '20px'}}>Post a comment</p>\n                <div style={{float:'left', marginLeft : '20px'}} className=\"ui action input fluid\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Comment..\"\n                    name=\"comment\"\n                    value={comment}\n                    onChange={(event) => setComment(event.target.value)}\n                    ref={commentInputRef}\n                  />\n                  <button\n                    type=\"submit\"\n                    className=\"ui button teal\"\n                    disabled={comment.trim() === ''}\n                    onClick={submitComment}\n                  >\n                    Submit\n                  </button>\n                </div>\n              </Form>\n            )}\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n  return postMarkup;\n}\n\nconst SUBMIT_COMMENT_MUTATION = gql`\n  mutation($postId: String!, $body: String!) {\n    createComment(postId: $postId, body: $body) {\n      id\n      comments {\n        id\n        body\n        createdAt\n        username\n      }\n      commentCount\n    }\n  }\n`;\n\nconst FETCH_POST_QUERY = gql`\n  query($postId: ID!) {\n    getPost(postId: $postId) {\n      id\n      title\n      content\n      image\n      youtube\n      createdAt\n      username\n      likeCount\n      likes {\n        username\n      }\n      commentCount\n      comments {\n        id\n        username\n        createdAt\n        body\n      }\n    }\n  }\n`;\n\nexport default SinglePost;","import React, { useContext } from 'react'\r\nimport '../App.css';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { DingtalkOutlined } from \"@ant-design/icons\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\r\nimport Home from './Home.js';\r\nimport Recipe from './Recipe';\r\nimport Login from './Login'\r\nimport Signup from './Signup'\r\nimport AuthRoute from './AuthRoute'\r\nimport { AuthContext } from '../context/auth';\r\nimport SinglePost from './SinglePost'\r\nfunction App() {\r\n    const { user } = useContext(AuthContext);\r\n    const context = useContext(AuthContext);\r\n    console.log(user)\r\n    return (\r\n        // <AuthProvider>\r\n        <Router>\r\n            <div className=\"App\" style={{height:(window.screen.availHeight-50)+'px'}}>\r\n                <nav id=\"navbar\" className=\"\">\r\n                    <div className=\"nav-wrapper\">\r\n                        <div className=\"logo\">\r\n                            <a href=\"#home\"><b>CookIt</b></a>\r\n                        </div>\r\n                        <ul id=\"menu\">\r\n                            {user !== null && (\r\n                                <>\r\n                                    <li><Link to=\"/\">Home</Link></li>\r\n                                    <li><Link to=\"/recipes\">Recipes</Link></li>\r\n                                    <li><Link to=\"/login\"  onClick={() => context.logout()}>Sign Out</Link></li>\r\n                                </>\r\n                            )}\r\n                            {user === null && (\r\n                                <>\r\n                                    <li><Link to=\"/login\">Sign in</Link></li>\r\n                                    <li><Link to=\"/signup\">Sign up</Link></li>\r\n                                </>\r\n                            )}\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n                {/* <AuthProvider> */}\r\n                <div className=\"App-body\">\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Home}></Route>\r\n                        <Route exact path=\"/recipes\" component={Recipe}></Route>\r\n                        <AuthRoute exact path=\"/login\" component={Login} />\r\n                        <AuthRoute exact path=\"/signup\" component={Signup} />\r\n                        <Route exact path=\"/recipes/:postId\" component={SinglePost} />\r\n                        <Route path=\"*\" component={Error404} />\r\n                    </Switch>\r\n                </div>\r\n                {/* </AuthProvider> */}\r\n            </div>\r\n\r\n\r\n        </Router>\r\n        // </AuthProvider>\r\n    );\r\n}\r\n\r\nfunction Error404() {\r\n    return (\r\n        <Alert severity=\"error\" className=\"alert error\">\r\n            404: Resource Not Found\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport 'antd/dist/antd.css';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { createHttpLink } from 'apollo-link-http';\nimport { setContext } from 'apollo-link-context';\nimport { AuthProvider } from './context/auth';\nimport 'semantic-ui-css/semantic.min.css'\nconst httpLink = createHttpLink({\n    uri: 'https://cookitdeploy.herokuapp.com/'\n});\n\nconst authLink = setContext(() => {\n    const token = localStorage.getItem('jwtToken');\n    return {\n        headers: {\n            Authorization: token ? `Bearer ${token}` : ''\n        }\n    };\n});\n\nconst client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache()\n});\n\n\n\n\nReactDOM.render(\n\n    <ApolloProvider client={client}>\n        <AuthProvider>\n            <App />\n        </AuthProvider>\n    </ApolloProvider>,\n    document.getElementById('root')\n);\n\n\n// ReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}